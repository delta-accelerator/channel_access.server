Search.setIndex({"docnames": ["api", "index", "quickstart", "server", "server.cas"], "filenames": ["api.rst", "index.rst", "quickstart.rst", "server.rst", "server.cas.rst"], "titles": ["API Reference", "Documentation", "Quickstart", "High-level thread-safe interface", "Low-level cas binding"], "terms": {"high": [0, 1, 2, 4], "level": [0, 1, 2], "thread": [0, 1, 2, 4], "safe": [0, 1, 2, 4], "interfac": [0, 1, 2, 4], "asyncread": [0, 3, 4], "complet": [0, 3, 4], "fail": [0, 3, 4], "asyncwrit": [0, 3, 4], "pv": [0, 2, 3, 4], "alarm_limit": [0, 3, 4], "attribut": [0, 3, 4], "control_limit": [0, 3, 4], "count": [0, 2, 3, 4], "display_limit": [0, 3, 4], "enum_str": [0, 3, 4], "is_arrai": [0, 3], "is_enum": [0, 3], "monitor_handl": [0, 3], "name": [0, 3, 4], "precis": [0, 3, 4], "sever": [0, 3, 4], "statu": [0, 3, 4], "status_sever": [0, 3], "timestamp": [0, 3, 4], "type": [0, 2, 3, 4], "unit": [0, 3, 4], "use_numpi": [0, 2, 3, 4], "valu": [0, 2, 3, 4], "value_timestamp": [0, 3], "warning_limit": [0, 3, 4], "server": [0, 2, 3, 4], "addalia": [0, 3], "createpv": [0, 2, 3], "removealia": [0, 3], "retreivepv": [0, 3], "shutdown": [0, 3], "alias": [0, 3, 4], "default_attribut": [0, 3], "failing_write_handl": [0, 3], "is_sequ": [0, 3], "low": [0, 1, 2, 3], "ca": [0, 1, 2, 3], "bind": [0, 1, 2], "existsrespons": [0, 4], "exists_her": [0, 4], "not_exists_her": [0, 4], "attachrespons": [0, 4], "not_found": [0, 4], "no_memori": [0, 4], "pvattach": [0, 4], "pvexisttest": [0, 4], "destroi": [0, 4], "interestdelet": [0, 4], "interestregist": [0, 4], "postev": [0, 4], "read": [0, 3, 4], "write": [0, 3, 4], "process": [0, 3, 4], "quickstart": 1, "instal": 1, "exampl": 1, "get": [1, 4], "sourc": [1, 3], "test": 1, "api": 1, "refer": [1, 3, 4], "index": [1, 2], "search": [1, 3, 4], "page": 1, "thi": [2, 3, 4], "librari": 2, "contain": [2, 3], "epic": [2, 4], "base": 2, "creat": [2, 3, 4], "channel": [2, 3, 4], "access": [2, 3, 4], "For": [2, 3, 4], "client": [2, 3, 4], "implement": [2, 3, 4], "see": [2, 3, 4], "channel_access": [2, 3, 4], "befor": 2, "environ": 2, "variabl": 2, "epics_bas": 2, "epics_host_arch": 2, "must": [2, 3, 4], "set": [2, 3, 4], "Then": [2, 4], "can": [2, 3, 4], "pip": 2, "If": [2, 3, 4], "numpi": [2, 3, 4], "import": 2, "time": [2, 3, 4], "support": [2, 3], "i": [2, 3, 4], "automat": [2, 3], "activ": [2, 3], "explicitli": 2, "control": [2, 3], "ca_with_numpi": 2, "0": [2, 3, 4], "1": [2, 3, 4], "packag": 2, "compil": 2, "arrai": [2, 3, 4], "ar": [2, 3, 4], "us": [2, 3, 4], "default": [2, 3, 4], "should": [2, 3, 4], "paramet": [2, 3, 4], "fals": [2, 3, 4], "show": 2, "simpl": 2, "up": 2, "common": [2, 3, 4], "long": [2, 3, 4], "while": 2, "true": [2, 3, 4], "sleep": 2, "The": [2, 3, 4], "avail": [2, 3], "onlin": 2, "gener": 2, "from": [2, 3, 4], "code": 2, "sphinx": 2, "cd": 2, "path": 2, "repositori": 2, "e": 2, "doc": 2, "python": 2, "setup": 2, "py": 2, "build_sphinx": 2, "open": 2, "build": 2, "html": 2, "github": 2, "git": 2, "clone": 2, "http": 2, "com": 2, "delta": 2, "acceler": 2, "run": 2, "pytest": 2, "dev": 2, "v": 2, "To": 2, "all": [2, 3, 4], "version": 2, "tox": 2, "class": [3, 4], "context": [3, 4], "asyncron": 3, "an": [3, 4], "object": [3, 4], "handler": [3, 4], "return": [3, 4], "signal": [3, 4], "asynchron": [3, 4], "oper": 3, "when": [3, 4], "call": [3, 4], "method": [3, 4], "updat": 3, "dict": [3, 4], "dictionari": [3, 4], "failur": [3, 4], "none": [3, 4], "new": [3, 4], "datetim": 3, "type_": 3, "value_deadband": 3, "archive_deadband": 3, "read_handl": 3, "write_handl": 3, "read_onli": 3, "encod": [3, 4], "utf": 3, "8": 3, "monitor": 3, "A": [3, 4], "give": 3, "alwai": 3, "through": 3, "follow": [3, 4], "kei": [3, 4], "occur": [3, 4], "data": [3, 4], "depend": [3, 4], "integ": [3, 4], "enum": [3, 4], "int": [3, 4], "float": [3, 4], "point": [3, 4], "string": [3, 4], "byte": [3, 4], "str": 3, "encondig": 3, "sequenc": [3, 4], "correspond": [3, 4], "one": [3, 4], "awar": 3, "repres": [3, 4], "wa": [3, 4], "chang": [3, 4], "tupl": [3, 4], "enumer": [3, 4], "length": [3, 4], "equal": [3, 4], "maximum": [3, 4], "allow": 3, "entri": [3, 4], "onli": [3, 4], "physic": [3, 4], "numer": [3, 4], "number": [3, 4], "relev": [3, 4], "decim": [3, 4], "place": [3, 4], "minimum": [3, 4], "rang": [3, 4], "user": [3, 4], "accept": [3, 4], "put": [3, 4], "request": [3, 4], "ani": [3, 4], "li": [3, 4], "outsid": [3, 4], "becom": [3, 4], "lolo": [3, 4], "hihi": [3, 4], "custom": 3, "retrievel": 3, "via": 3, "perform": 3, "It": [3, 4], "unspecifi": [3, 4], "block": 3, "signatur": 3, "which": [3, 4], "need": [3, 4], "current": 3, "disallow": 3, "them": 3, "timestmap": 3, "instead": 3, "argument": 3, "raw": 3, "initi": [3, 4], "scalar": [3, 4], "These": 3, "overrid": [3, 4], "more": [3, 4], "than": 3, "deadband": 3, "event": [3, 4], "fire": 3, "archiv": 3, "callabl": 3, "bool": [3, 4], "t": [3, 4], "overwrit": 3, "properti": [3, 4], "alarm": [3, 4], "displai": 3, "limit": 3, "writeabl": 3, "element": [3, 4], "wether": [3, 4], "might": 3, "also": [3, 4], "disabl": 3, "fn": 3, "same": [3, 4], "utc": 3, "last": [3, 4], "ha": 3, "its": 3, "size": 3, "warn": [3, 4], "On": 3, "creation": 3, "messag": 3, "stop": 3, "manag": 3, "protocol": 3, "shut": 3, "down": 3, "end": 3, "statement": 3, "pass": 3, "alia": 3, "add": 3, "altern": 3, "first": 3, "found": 3, "list": 3, "ist": 3, "check": 3, "exist": [3, 4], "second": [3, 4], "origin": 3, "made": 3, "arg": 3, "kwarg": 3, "forward": 3, "doe": 3, "hold": [3, 4], "so": 3, "collect": 3, "longer": [3, 4], "respons": 3, "keep": 3, "aliv": 3, "thei": [3, 4], "alreadi": 3, "ignor": 3, "other": 3, "connect": [3, 4], "old": 3, "remain": 3, "remov": 3, "rais": 3, "keyerror": 3, "after": 3, "map": 3, "garbag": 3, "iter": 3, "over": [3, 4], "wrapper": 4, "modul": 4, "34340866": 4, "34340865": 4, "handl": 4, "defin": 4, "deriv": 4, "reject": 4, "multipl": 4, "intern": 4, "care": 4, "taken": 4, "abov": 4, "instanc": 4, "indic": 4, "reason": 4, "why": 4, "could": 4, "address": 4, "where": 4, "receiv": 4, "ip": 4, "port": 4, "identifi": 4, "32bit": 4, "result": 4, "appropi": 4, "inform": 4, "about": 4, "becaus": 4, "datetime_to_ep": 4, "epics_to_datetim": 4, "meth": 4, "condit": 4, "typic": 4, "cannoci": 4, "serv": 4, "under": 4, "differ": 4, "main": 4, "don": 4, "post": 4, "success": 4, "otherwis": 4, "wire": 4, "possibl": 4, "some": 4, "text": 4, "given": 4, "event_mask": 4, "accordingli": 4, "mask": 4, "describ": 4, "retreiv": 4, "timeout": 4, "io": 4, "most": 4}, "objects": {"channel_access": [[3, 0, 0, "-", "server"]], "channel_access.server": [[3, 1, 1, "", "AsyncRead"], [3, 1, 1, "", "AsyncWrite"], [3, 1, 1, "", "PV"], [3, 1, 1, "", "Server"], [4, 0, 0, "-", "cas"], [3, 5, 1, "", "default_attributes"], [3, 5, 1, "", "failing_write_handler"], [3, 5, 1, "", "is_sequence"]], "channel_access.server.AsyncRead": [[3, 2, 1, "", "complete"], [3, 2, 1, "", "fail"]], "channel_access.server.AsyncWrite": [[3, 2, 1, "", "complete"], [3, 2, 1, "", "fail"]], "channel_access.server.PV": [[3, 3, 1, "", "alarm_limits"], [3, 3, 1, "", "attributes"], [3, 3, 1, "", "control_limits"], [3, 3, 1, "", "count"], [3, 3, 1, "", "display_limits"], [3, 3, 1, "", "enum_strings"], [3, 3, 1, "", "is_array"], [3, 3, 1, "", "is_enum"], [3, 3, 1, "", "monitor_handler"], [3, 3, 1, "", "name"], [3, 3, 1, "", "precision"], [3, 3, 1, "", "severity"], [3, 3, 1, "", "status"], [3, 3, 1, "", "status_severity"], [3, 3, 1, "", "timestamp"], [3, 3, 1, "", "type"], [3, 3, 1, "", "unit"], [3, 3, 1, "", "use_numpy"], [3, 3, 1, "", "value"], [3, 3, 1, "", "value_timestamp"], [3, 3, 1, "", "warning_limits"]], "channel_access.server.Server": [[3, 2, 1, "", "addAlias"], [3, 3, 1, "", "aliases"], [3, 2, 1, "", "createPV"], [3, 3, 1, "", "pvs"], [3, 2, 1, "", "removeAlias"], [3, 2, 1, "", "retreivePV"], [3, 2, 1, "", "shutdown"]], "channel_access.server.cas": [[4, 1, 1, "", "AsyncRead"], [4, 1, 1, "", "AsyncWrite"], [4, 1, 1, "", "AttachResponse"], [4, 1, 1, "", "ExistsResponse"], [4, 1, 1, "", "PV"], [4, 1, 1, "", "Server"], [4, 5, 1, "", "process"]], "channel_access.server.cas.AsyncRead": [[4, 2, 1, "", "complete"], [4, 2, 1, "", "fail"]], "channel_access.server.cas.AsyncWrite": [[4, 2, 1, "", "complete"], [4, 2, 1, "", "fail"]], "channel_access.server.cas.AttachResponse": [[4, 4, 1, "", "NOT_FOUND"], [4, 4, 1, "", "NO_MEMORY"]], "channel_access.server.cas.ExistsResponse": [[4, 4, 1, "", "EXISTS_HERE"], [4, 4, 1, "", "NOT_EXISTS_HERE"]], "channel_access.server.cas.PV": [[4, 2, 1, "", "count"], [4, 2, 1, "", "destroy"], [4, 2, 1, "", "interestDelete"], [4, 2, 1, "", "interestRegister"], [4, 2, 1, "", "name"], [4, 2, 1, "", "postEvent"], [4, 2, 1, "", "read"], [4, 2, 1, "", "type"], [4, 4, 1, "", "use_numpy"], [4, 2, 1, "", "write"]], "channel_access.server.cas.Server": [[4, 2, 1, "", "pvAttach"], [4, 2, 1, "", "pvExistTest"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "document": [1, 2], "indic": 1, "tabl": 1, "quickstart": 2, "instal": 2, "exampl": 2, "get": 2, "sourc": 2, "test": 2, "high": 3, "level": [3, 4], "thread": 3, "safe": 3, "interfac": 3, "low": 4, "ca": 4, "bind": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Documentation": [[1, "documentation"], [2, "documentation"]], "Indices and tables": [[1, "indices-and-tables"]], "Quickstart": [[2, "quickstart"]], "Installation": [[2, "installation"]], "Example": [[2, "example"]], "Get the source": [[2, "get-the-source"]], "Tests": [[2, "tests"]], "High-level thread-safe interface": [[3, "module-channel_access.server"]], "Low-level cas binding": [[4, "module-channel_access.server.cas"]]}, "indexentries": {"asyncread (class in channel_access.server)": [[3, "channel_access.server.AsyncRead"]], "asyncwrite (class in channel_access.server)": [[3, "channel_access.server.AsyncWrite"]], "pv (class in channel_access.server)": [[3, "channel_access.server.PV"]], "server (class in channel_access.server)": [[3, "channel_access.server.Server"]], "addalias() (channel_access.server.server method)": [[3, "channel_access.server.Server.addAlias"]], "alarm_limits (channel_access.server.pv property)": [[3, "channel_access.server.PV.alarm_limits"]], "aliases (channel_access.server.server property)": [[3, "channel_access.server.Server.aliases"]], "attributes (channel_access.server.pv property)": [[3, "channel_access.server.PV.attributes"]], "channel_access.server": [[3, "module-channel_access.server"]], "complete() (channel_access.server.asyncread method)": [[3, "channel_access.server.AsyncRead.complete"]], "complete() (channel_access.server.asyncwrite method)": [[3, "channel_access.server.AsyncWrite.complete"]], "control_limits (channel_access.server.pv property)": [[3, "channel_access.server.PV.control_limits"]], "count (channel_access.server.pv property)": [[3, "channel_access.server.PV.count"]], "createpv() (channel_access.server.server method)": [[3, "channel_access.server.Server.createPV"]], "default_attributes() (in module channel_access.server)": [[3, "channel_access.server.default_attributes"]], "display_limits (channel_access.server.pv property)": [[3, "channel_access.server.PV.display_limits"]], "enum_strings (channel_access.server.pv property)": [[3, "channel_access.server.PV.enum_strings"]], "fail() (channel_access.server.asyncread method)": [[3, "channel_access.server.AsyncRead.fail"]], "fail() (channel_access.server.asyncwrite method)": [[3, "channel_access.server.AsyncWrite.fail"]], "failing_write_handler() (in module channel_access.server)": [[3, "channel_access.server.failing_write_handler"]], "is_array (channel_access.server.pv property)": [[3, "channel_access.server.PV.is_array"]], "is_enum (channel_access.server.pv property)": [[3, "channel_access.server.PV.is_enum"]], "is_sequence() (in module channel_access.server)": [[3, "channel_access.server.is_sequence"]], "module": [[3, "module-channel_access.server"], [4, "module-channel_access.server.cas"]], "monitor_handler (channel_access.server.pv property)": [[3, "channel_access.server.PV.monitor_handler"]], "name (channel_access.server.pv property)": [[3, "channel_access.server.PV.name"]], "precision (channel_access.server.pv property)": [[3, "channel_access.server.PV.precision"]], "pvs (channel_access.server.server property)": [[3, "channel_access.server.Server.pvs"]], "removealias() (channel_access.server.server method)": [[3, "channel_access.server.Server.removeAlias"]], "retreivepv() (channel_access.server.server method)": [[3, "channel_access.server.Server.retreivePV"]], "severity (channel_access.server.pv property)": [[3, "channel_access.server.PV.severity"]], "shutdown() (channel_access.server.server method)": [[3, "channel_access.server.Server.shutdown"]], "status (channel_access.server.pv property)": [[3, "channel_access.server.PV.status"]], "status_severity (channel_access.server.pv property)": [[3, "channel_access.server.PV.status_severity"]], "timestamp (channel_access.server.pv property)": [[3, "channel_access.server.PV.timestamp"]], "type (channel_access.server.pv property)": [[3, "channel_access.server.PV.type"]], "unit (channel_access.server.pv property)": [[3, "channel_access.server.PV.unit"]], "use_numpy (channel_access.server.pv property)": [[3, "channel_access.server.PV.use_numpy"]], "value (channel_access.server.pv property)": [[3, "channel_access.server.PV.value"]], "value_timestamp (channel_access.server.pv property)": [[3, "channel_access.server.PV.value_timestamp"]], "warning_limits (channel_access.server.pv property)": [[3, "channel_access.server.PV.warning_limits"]], "asyncread (class in channel_access.server.cas)": [[4, "channel_access.server.cas.AsyncRead"]], "asyncwrite (class in channel_access.server.cas)": [[4, "channel_access.server.cas.AsyncWrite"]], "attachresponse (class in channel_access.server.cas)": [[4, "channel_access.server.cas.AttachResponse"]], "exists_here (channel_access.server.cas.existsresponse attribute)": [[4, "channel_access.server.cas.ExistsResponse.EXISTS_HERE"]], "existsresponse (class in channel_access.server.cas)": [[4, "channel_access.server.cas.ExistsResponse"]], "not_exists_here (channel_access.server.cas.existsresponse attribute)": [[4, "channel_access.server.cas.ExistsResponse.NOT_EXISTS_HERE"]], "not_found (channel_access.server.cas.attachresponse attribute)": [[4, "channel_access.server.cas.AttachResponse.NOT_FOUND"]], "no_memory (channel_access.server.cas.attachresponse attribute)": [[4, "channel_access.server.cas.AttachResponse.NO_MEMORY"]], "pv (class in channel_access.server.cas)": [[4, "channel_access.server.cas.PV"]], "server (class in channel_access.server.cas)": [[4, "channel_access.server.cas.Server"]], "channel_access.server.cas": [[4, "module-channel_access.server.cas"]], "complete() (channel_access.server.cas.asyncread method)": [[4, "channel_access.server.cas.AsyncRead.complete"]], "complete() (channel_access.server.cas.asyncwrite method)": [[4, "channel_access.server.cas.AsyncWrite.complete"]], "count() (channel_access.server.cas.pv method)": [[4, "channel_access.server.cas.PV.count"]], "destroy() (channel_access.server.cas.pv method)": [[4, "channel_access.server.cas.PV.destroy"]], "fail() (channel_access.server.cas.asyncread method)": [[4, "channel_access.server.cas.AsyncRead.fail"]], "fail() (channel_access.server.cas.asyncwrite method)": [[4, "channel_access.server.cas.AsyncWrite.fail"]], "interestdelete() (channel_access.server.cas.pv method)": [[4, "channel_access.server.cas.PV.interestDelete"]], "interestregister() (channel_access.server.cas.pv method)": [[4, "channel_access.server.cas.PV.interestRegister"]], "name() (channel_access.server.cas.pv method)": [[4, "channel_access.server.cas.PV.name"]], "postevent() (channel_access.server.cas.pv method)": [[4, "channel_access.server.cas.PV.postEvent"]], "process() (in module channel_access.server.cas)": [[4, "channel_access.server.cas.process"]], "pvattach() (channel_access.server.cas.server method)": [[4, "channel_access.server.cas.Server.pvAttach"]], "pvexisttest() (channel_access.server.cas.server method)": [[4, "channel_access.server.cas.Server.pvExistTest"]], "read() (channel_access.server.cas.pv method)": [[4, "channel_access.server.cas.PV.read"]], "type() (channel_access.server.cas.pv method)": [[4, "channel_access.server.cas.PV.type"]], "use_numpy (channel_access.server.cas.pv attribute)": [[4, "channel_access.server.cas.PV.use_numpy"]], "write() (channel_access.server.cas.pv method)": [[4, "channel_access.server.cas.PV.write"]]}})